name: CI

on:
  workflow_dispatch:
    inputs:
      bump_type:
        description: 'Version bump type (leave empty for CI only)'
        required: false
        type: choice
        options:
          - ''
          - patch
          - minor
          - major
  pull_request:
    branches:
      - '**'
  push:
    branches:
      - main

jobs:
  govulncheck:
    name: Vulnerability scan
    runs-on: "ubuntu-24.04"
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Set up Go v1.24
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          check-latest: true
      - name: Install govulncheck
        run: go install golang.org/x/vuln/cmd/govulncheck@latest
      - name: Scan for vulnerabilities
        run: govulncheck ./...

  build-and-test:
    runs-on: "ubuntu-24.04"
    strategy:
      matrix:
        go:
          - "1.20"
          - "1.21"
          - "1.22"
          - "1.23"
          - "1.24"
    name: "Build and test: go v${{ matrix.go }}"
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Set up Go v${{ matrix.go }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}
      - name: Ensure tidy
        run: go mod tidy
      - name: Verify module file consistency
        run: git diff --exit-code go.mod go.sum
      - name: Compile all packages
        run: go build ./...
      # Only run the unit tests for now. We will need to integrate with the test
      # wallet for the integration tests
      - name: Run unit tests
        run: go test 

  release:
    name: Release
    runs-on: "ubuntu-24.04"
    needs: [govulncheck, build-and-test]
    if: |
      github.event_name == 'workflow_dispatch' && 
      github.event.inputs.bump_type != '' && 
      github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          check-latest: true

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Run Go release script
        run: |
          go run internal/scripts/release.go -type=${{ github.event.inputs.bump_type }}

      - name: Get new version
        id: get_version
        run: |
          NEW_VERSION=$(git describe --tags --abbrev=0)
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "Releasing new version: $NEW_VERSION"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.new_version }}
          name: ${{ steps.get_version.outputs.new_version }}
          generate_release_notes: true
